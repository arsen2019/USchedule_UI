/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/schedules/{group_uuid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Courses */
        get: operations["get_courses_schedules__group_uuid__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/groups/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Groups */
        get: operations["get_groups_groups__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/groups/labs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Labs */
        get: operations["get_labs_groups_labs_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Building */
        Building: {
            /** Name */
            name: string;
        };
        /** Course */
        Course: {
            uuid: string;
            /** Name */
            name: string;
            /** Day Of Week */
            day_of_week: string;
            /** Type */
            type: string;
            /** Start Time */
            start_time: string;
            /** End Time */
            end_time: string;
            teacher: components["schemas"]["Teacher"] | null;
            room: components["schemas"]["Room"] | null;
            building: components["schemas"]["Building"] | null;
        };
        /** Group */
        Group: {
            /** Name */
            name: string;
            /**
             * Uuid
             * Format: uuid
             */
            uuid: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** Lab */
        Lab: {
            /** Name */
            name: string;
            /**
             * Uuid
             * Format: uuid
             */
            uuid: string;
        };
        /** Room */
        Room: {
            /** Name */
            name: string;
        };
        /** Teacher */
        Teacher: {
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_courses_schedules__group_uuid__get: {
        parameters: {
            query?: {
                lab_uuid?: string | null;
                current_week?: string;
            };
            header?: never;
            path: {
                group_uuid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Course"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_groups_groups__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Group"][];
                };
            };
        };
    };
    get_labs_groups_labs_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Lab"][];
                };
            };
        };
    };
}
